@model E_Commerce.ViewModels.EditProductViewModel

@{
    ViewData["Title"] = "Edit";
    Layout = "~/Views/Shared/AdminLayout.cshtml";
}

<div class="row">
    <div class="col-md-4">
        @using (Html.BeginForm("Edit", "Product", FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
@*            <input type="hidden" id="Id" name="Id" value="@Model.Id" />
*@            <div class="form-group">
                @Html.LabelFor(m => m.Name, new { @class = "control-label" })
                @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Category, new { @class = "control-label" })
                @Html.TextBoxFor(m => m.Category, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Category, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Description, new { @class = "control-label" })
                @Html.TextBoxFor(m => m.Description, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Price, new { @class = "control-label" })
                @Html.TextBoxFor(m => m.Price, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Price, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                <label for="productImage">Product Image:</label>
                <div class="input-group mb-3">
                    <div class="custom-file">
                        <input type="file" class="custom-file-input" id="Image" name="Image" aria-describedby="ImageHelp">
                        <label class="custom-file-label" for="Image" id="ImageLabel">Choose file</label>
                    </div>
                </div>
                <img class="product__item__pic w-50 rounded" src="@Model.URL" alt="" id="previewImage">
                @Html.ValidationMessageFor(m => m.Image, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        }
    </div>
</div>


                        <script>
    // Get the file input element and the label element
    const fileInput = document.querySelector('#Image');
    const label = document.querySelector('#ImageLabel');

    // Add an event listener to the file input element
    fileInput.addEventListener('change', () => {
        // Get the file name and set it as the label text
        const fileName = fileInput.value.split('\\').pop();
        label.textContent = fileName;
    });
</script>